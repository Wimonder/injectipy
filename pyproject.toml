[tool.poetry]
name = "injectipy"
version = "0.1.0"
description = ""
authors = ["Wim Onderbeke <wim.onderbeke@hotmail.com>"]
readme = "README.md"
license = "MIT"
keywords = ["dependency injection"]
homepage = "https://github.com/Wimonder/injectipy"
repository = "https://github.com/Wimonder/injectipy"
documentation = "https://github.com/Wimonder/injectipy"

[tool.poetry.dependencies]
python = "^3.9"
typing-extensions = "^4.9.0"


[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
black = "^23.12.1"
mypy = "^1.8.0"
ruff = "^0.1.8"
bandit = "^1.7.5"
pre-commit = "^3.6.0"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.black]
line-length = 120
target-version = ['py39']

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-v --tb=short --cov=injectipy --cov-report=term-missing --cov-fail-under=90"

[tool.ruff]
line-length = 120
target-version = "py39"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501", # line too long (handled by black)
]

[tool.ruff.per-file-ignores]
"tests/*" = ["B018"]  # Allow useless expressions in tests

[tool.coverage.run]
source = ["injectipy"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]  # Skip assert_used test

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
